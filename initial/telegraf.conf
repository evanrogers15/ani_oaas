[agent]
  interval = "30s"
#  debug = true

[[outputs.influxdb_v2]]
 ## The URLs of the InfluxDB cluster nodes.
 ##
 ## Multiple URLs can be specified for a single cluster, only ONE of the
 ## urls will be written to each interval.
 urls = ["http://influxdb.local:8086"]
 ## Token for authentication.
 token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
 ## Organization is the name of the organization you wish to write to; must exist.
 organization = "$DOCKER_INFLUXDB_INIT_ORG"
 ## Destination bucket to write into.
 bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"

[[inputs.file]]
    files = ["/api-data/path_*.json"]
    data_format = "json_v2"
    [[inputs.file.json_v2]]
        measurement_name = "appN_path"
        [[inputs.file.json_v2.object]]
            path = "@this"
            included_keys = ["data_dataLoss_value", "data_latency_value", "data_rtt_value", "data_dataJitter_value", "data_totalCapacity_value", "data_utilizedCapacity_value", "data_availableCapacity_value", "data_voiceLoss_value", "data_mos_value", "pathStatus" ]
            tags = ["pathOrgId", "pathUrlTarget","pathId", "path_tag_category", "path_tag_value", "applianceName", "connectionType", "ispName", "networkType", "vpn"]
            [inputs.file.json_v2.object.renames]
                data_dataLoss_value = "dataLoss"
                data_latency_value = "latency"
                data_rtt_value = "rtt"
                data_dataJitter_value = "dataJitter"
                data_availableCapacity_value = "availableCapacity"
                data_utilizedCapacity_value = "utilizedCapacity"
                data_totalCapacity_value = "totalCapacity"
                data_voiceLoss_value = "voiceLoss"
                data_voiceJitter_value = "voiceJitter"
                data_mos_value = "mos"

[[inputs.file]]
    files = ["/api-data/webApp_*.json"]
    data_format = "json_v2"
    [[inputs.file.json_v2]]
        measurement_name = "appN_exp"
        [[inputs.file.json_v2.object]]
            path = "@this"
            included_keys = ["milestones_networkTiming_value", "milestones_serverTiming_value", "milestones_browserTiming_value", "milestones_totalTime_value", "milestones_statusCode_value", "webPathStatus"]
            tags = ["webPathOrgId", "appName", "userFlowName","milestones_milestone", "milestones_milestoneName", "webPathId", "webAppId", "webUrlTarget", "web_tag_category" , "web_tag_value", "applianceName", "applianceId", "locality", "localityAdminAreaLevelOne", "localityAdminAreaLevelTwo", "localityCountry"]
            [inputs.file.json_v2.object.renames]
                milestones_milestone = "milestone"
                milestones_milestoneName = "milestoneName"
                milestones_networkTiming_value = "networkTiming"
                milestones_serverTiming_value = "serverTiming"
                milestones_browserTiming_value = "browserTiming"
                milestones_totalTime_value = "totalTime"
                milestones_statusCode_value = "statusCode"